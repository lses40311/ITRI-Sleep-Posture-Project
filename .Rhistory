a = matrix(1:9,3)
solve(a)
a
solve(t(a)%*%a)
install.packages("ggtern")
plot <- ggtern()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Downloads/project2016/estimation.R', echo=TRUE)
source('~/Downloads/project2016/estimation.R', echo=TRUE)
source('~/Downloads/project2016/estimation.R', echo=TRUE)
source('~/Downloads/project2016/estimation.R', echo=TRUE)
wd
getwd()
ped
pwd
wd
wd()
getwd()
source('~/Code/HMM_python/visual_raw.R', echo=TRUE)
install.packages("signal")
source('~/Code/HMM_python/visual_raw.R', echo=TRUE)
install.packages("zoo")
source('~/Code/HMM_python/visual_raw.R', echo=TRUE)
source('~/Code/HMM_python/visual_raw.R', echo=TRUE)
install.packages("TED")
source('~/Code/HMM_python/visual_raw.R', echo=TRUE)
source('~/Code/HMM_python/visual_raw.R', echo=TRUE)
capabilities("tcltk")
system("ls -ld /usr/local /usr/local/lib /usr/local/lib/libtcl*")
library(tcltk)
source('~/Code/HMM_python/segmentation.R', echo=TRUE)
source('~/Code/HMM_python/segmentation.R', echo=TRUE)
source('~/Code/HMM_python/segmentation.R', echo=TRUE)
getwd()
getwd()
setwd("Code/Sleep_project/")
?partition
a = c(1,2,3)
a
split(a,c(1,1,2))
b = split(a,c(1,1,2))
b
b[1]
b[2]
a = matrix(c(1,2,3,4,5,6,7,8) , 4,2)
a
b = split(a,c(1,1,2,2))
b
b[1]
b = split(a,c(1,1,2,3))
b
b[3]
a
a = matrix(c(1,2,3,4,5,6,7,8) ,4,2,byrow = TRUE)
a
1:3
1:3:2
1:3:1
(1:3):2
(1:3):10
rep(a,each)
rep(a,"each")
rep(a,... = each)
rep(a, each = 2)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
partition_n
n
N
N = 312
N / partition_n
round(N/partition_n)
62 * 5
ceiling(N/partition_n)
acc_data
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
idx
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
idx
1:partition_n
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
idx
dim(gyo_data)[1] / partition_n)
dim(gyo_data)[1] / partition_n
dim(gyo_data)[1] / partition_n
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
idx
warnings()
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
idx
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
idx
dim(gyo_data)
dim(gyo_data)
dim(gyo_data)
dim(gyo_data)
dim(gyo_data)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
View(x)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
a
b
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
a = matrix(c(1,2,3,4,5,6,7,8) ,4,2,byrow = TRUE)
a
b = split(a , c(1,1,2,3))
b
for(x in b){print(x)}
b = split(a , c(1,1,2))
b[1]
b = split(a , c(1,1,2,3))
b[1]
b[1,1]
View(a)
a
a = data.frame(a)
a
b = split(a , c(1,1,2,3))
b
b[1]
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
gry_data_split
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
b
c = mean(b)
c = lapply(b , mean)
c = rapply(b , mean)
c
c
b
c
c = rapply(b , list(mean))
c = rapply(b , function(x) mean(x))
c
c = rapply(b , function(x) array(mean(x)))
c
c = rapply(b , function(x) list(mean(x)))
c
x
c
acc_feature
acc_feature
a
b
b[1]
mean(b[1])
c = rapply(b , mean)
c
x<-array(1:15,c(3,5))
x
x[1]
x[2]
x = data.frame(x)
x
x[1]
x[1,2]
b
b[1][2]
b[1]
b[1]
dim(b[1])
b[1]
summary(b[1])
b[1,2]
b[1]
b[1]$`1`
b[1]$`1`$X1
b[1]$`1`[2]
b[1]$`1`[1]
summary(b[1]$`1`)
?array
a = array(a)
a
a
a
a = array(a, c(2,4))
a
a
a[1]
a[2]
a[1,1]
a[1,1,1]
a[1,1]
a[1][1]
array(1:5)
array(1:10)
array(1:5, c(2,5))
array(1:5, c(2,5,2))
array(1:5, c(2,5,2,2))
x = array(1:5, c(2,5,2,2))
dim(x)
x = array(1:5, c(1,1,2,3))
x
a
b
c
ll = c(a,b,c)
ll
ll[[2]]
ll[[4]]
ll[[1]]
ll
a
b
c
length(ll)
ll[[16]]
str(ll)
class(ll)
class(a)
class(b)
class(c)
class(d)
lll = list(a,b,c)
lll
length(lll)
class(lll)
class(lll[[1]])
class(lll[1])
class(gry_data_split)
length(gry_data_split)
gry_data_split[1]
class(gry_data_split[1])
class(gry_data_split[[1])
class(gry_data_split[[1]])
a = matrix(1:10 , 2,5
)
a
a[1]
a[2]
a[10]
a[1,]
env
?env.profile
env.profile
class(gry_data_split[[1]])
gry_data_split
gry_data_split$`5`
gry_data_split[[1]]$x
for(i in gry_data_split){class(i)}
for(i in gry_data_split){class(i)}
gry_data_split
View(i)
for(i in gry_data_split){print(class(i))}
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
gry_data_feature
c(gry_data_feature)
length(gry_data_feature)
acc_feature
class(acc_feature)
class(acc_feature)
class(acc_feature)
class(acc_feature)
c(acc_feature)
class(c(acc_feature))
gry_data_feature[[3:5]
]
gry_data_feature[[5]]
gry_data_feature[[3:5]]
gry_data_feature[3:5]
c(gry_data_feature[3:5])
c(gry_data_feature[3:5])
class(c(gry_data_feature[3:5]))
unlist(gry_data_feature[3:5]))
unlist(gry_data_feature[3:5])
unlist(gry_data_feature[3:5])
unlist(gry_data_feature[3:5])
unlist(gry_data_feature[3:5])
unlist(gry_data_feature[3:5])
class(unlist(gry_data_feature[3:5]))
a  = unlist(gry_data_feature[3:5])
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
last_time_gry
c(acc_feature, last_time_gry)
output
c(acc_feature, last_time_gry, output)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
output
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
output
buf
paste(buf, output)
paste(buf, output, collapse = ",")
as.character(buf)
paste(as.character(buf), output, collapse = ",")
paste(as.character(buf), output)
paste(as.character(buf), output, sep = ",")
paste(as.character(buf), output, collapse = ",")
paste(as.character(buf))
paste(buf
)
paste(buf)
paste(as.character(buf))
paste(buf, collapse = ",",sep = "")
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
paste(paste(buf, collapse = ",",sep = ""), output)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
x,y,z = 2,2,2
x = 3
y = 2
z = 5
array(c(x,y,z))
arr = array(c(x,y,z))
which.is.max(arr)
which(arr==max(arr))
arr = array(c(x,y,z))
arr_abs = abs(arr)
which(arr_abs==max(arr_abs))
arr[0]
arr[1]
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
round(acc_window_duration/gyo_window_duration)
plot(1:n,read_data[,4], type = "l")
View(read_data)
plt_data = read_data[,4:6 & read_data$type = "Gry"]
plt_data = read_data[,4:6 & read_data$type == "Gry"]
plt_data = read_data[, read_data$type == "Gry"]
plt_data = read_data[read_data$type == "Gry",4:6 ]
plt_data
dim(plt_data)
N =dim(plt_data)[1]
plot(1:N,plt_data, type = "l")
plot(1:N,plt_data[,4], type = "l")
plt_data
plot(1:N,plt_data[,1], type = "l")
plot(1:N,plt_data[,2], type = "l")
plot(1:N,plt_data[,3], type = "l")
summary(plt_data[,1])
summary(abs(plt_data[,1]))
summary(abs(plt_data[,2]))
summary(abs(plt_data[,3]))
rapply(abs(plt_data) , sum)
apply(abs(plt_data) , MARGIN = 1, sum)
?apply
arr_abs = apply(abs(plt_data) , MARGIN = 1, sum)
length(arr_abs)
N
summary(arr_abs)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
arr_abs
plt_data
dim(plt_data)
v = vector(mode = "numerical")
v = vector(mode = "numeric")
v = [v 10]
arr = array(data = NA)
class(arr)
a = c()
class(a)
a = c(1,2)
class(a)
arr = c(arr , 2)
arr
arr
arr = array()
arr
arr = []
c()
a = c()
a
a = c(a, 10)
a
a = c(a, 10)
a
last_time_gry
sum(last_time_gry)
sum(abs(last_time_gry))
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
v
summary(v)
ll
l = list(c(1,2,3))
l = list(c(1,2,3) , c(2,3,4))
l
gry_data_feature
gry_data_feature[[1]]
gry_data_split
gry_data_split[[1]]
order(c(1,2,3,4,5), decreasing=TRUE)[1:n]
order(c(1,2,3,4,5), decreasing=TRUE)[1:2]
gry_data_split[[1]]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
gry_data_feature
gry_data_feature[[1]]
gry_data_feature[[1]][1]
gry_data_feature[[1]][1] < 0
source('~/Code/Sleep_project/get_max.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/get_max.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/get_max.R', echo=TRUE)
source('~/Code/Sleep_project/get_max.R', echo=TRUE)
source('~/Code/Sleep_project/get_max.R', echo=TRUE)
source('~/Code/Sleep_project/get_max.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
arr
l
source('~/Code/Sleep_project/get_max.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
gry_data_feature
len
source('~/Code/Sleep_project/get_max.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/get_max.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
gry_data_feature
source('~/Code/Sleep_project/get_max.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/get_max.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
or
avg
source('~/Code/Sleep_project/get_max.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/get_max.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/get_max.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
last_time_gry
gry_data_feature
gry_data_feature[[1]]
c(gry_data_feature[[1]] , gry_data_feature[[2]])
source('~/Code/Sleep_project/Untitled.R', echo=TRUE)
read_data[1]
read_data[1,]
rm(list=ls())
source("max_axis.R")
source("get_max.R")
set.seed(350)
acc_window_duration = 1 # seconds
gyo_window_duration = 0.2
partition_n = round(acc_window_duration/gyo_window_duration)
gry_last_n = 2
collor_arr = c("red" , "yellow" , "blue" , "green" , "black")
postur = c("x", "r", "b", "n", "l","s")
read_data = read.table("data/raw_data_7_23.txt",header=FALSE,sep="," , fill = TRUE)
read_data[1,]
read_data[1,1]
read_data[1,1]
read_data[1,1] > 100
as.numeric(read_data[1,1])
read_data[1,1]
as.character(read_data[1,1])
as.numeric(as.character(read_data[1,1]))
as.numeric(as.character(read_data[1,1])) > 100
